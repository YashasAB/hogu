import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from "react";
export const SlotManagement = ({ date, slots, loading, onDateChange, onSlotStatusChange, onAddSlots, }) => {
    const [start, setStart] = React.useState("18:00");
    const [end, setEnd] = React.useState("22:00");
    const [interval, setInterval] = React.useState(30);
    const [capacity, setCapacity] = React.useState(4);
    const getStatusColor = (status) => {
        switch (status) {
            case "available":
                return "bg-green-500/20 text-green-300 border-green-500/30";
            case "cutoff":
                return "bg-amber-500/20 text-amber-300 border-amber-500/30";
            case "full":
                return "bg-red-500/20 text-red-300 border-red-500/30";
            default:
                return "bg-slate-500/20 text-slate-300 border-slate-500/30";
        }
    };
    const handleAddSlots = () => {
        onAddSlots({ date, start, end, interval, capacity });
    };
    return (_jsxs("section", { className: "rounded-2xl p-6 ring-1 ring-white/10 bg-slate-900/70", children: [_jsx("h2", { className: "text-lg sm:text-xl font-semibold mb-6", children: "Slot Management" }), _jsxs("div", { className: "mb-6", children: [_jsx("label", { className: "block text-sm font-medium text-slate-300 mb-2", children: "Select Date" }), _jsx("input", { type: "date", value: date, onChange: (e) => onDateChange(e.target.value), className: "bg-slate-800 border border-slate-600 rounded-lg px-3 py-2 text-slate-200 focus:outline-none focus:ring-2 focus:ring-rose-500" })] }), _jsxs("div", { className: "mb-6 p-4 bg-slate-800 rounded-xl", children: [_jsx("h3", { className: "text-md font-medium text-slate-200 mb-4", children: "Add New Slots" }), _jsxs("div", { className: "grid grid-cols-2 md:grid-cols-4 gap-3", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-xs text-slate-400 mb-1", children: "Start Time" }), _jsx("input", { type: "time", value: start, onChange: (e) => setStart(e.target.value), className: "w-full bg-slate-700 border border-slate-600 rounded px-2 py-1 text-slate-200 text-sm" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-xs text-slate-400 mb-1", children: "End Time" }), _jsx("input", { type: "time", value: end, onChange: (e) => setEnd(e.target.value), className: "w-full bg-slate-700 border border-slate-600 rounded px-2 py-1 text-slate-200 text-sm" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-xs text-slate-400 mb-1", children: "Interval (min)" }), _jsx("input", { type: "number", value: interval, onChange: (e) => setInterval(Number(e.target.value)), className: "w-full bg-slate-700 border border-slate-600 rounded px-2 py-1 text-slate-200 text-sm" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-xs text-slate-400 mb-1", children: "Capacity" }), _jsx("input", { type: "number", value: capacity, onChange: (e) => setCapacity(Number(e.target.value)), className: "w-full bg-slate-700 border border-slate-600 rounded px-2 py-1 text-slate-200 text-sm" })] })] }), _jsx("button", { onClick: handleAddSlots, className: "mt-3 px-4 py-2 bg-rose-600 text-white rounded-lg hover:bg-rose-700 transition-colors text-sm", children: "Add Slots" })] }), _jsxs("div", { children: [_jsxs("h3", { className: "text-md font-medium text-slate-200 mb-4", children: ["Slots for ", new Date(date).toLocaleDateString()] }), loading ? (_jsx("div", { className: "grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-2", children: [1, 2, 3, 4, 5, 6].map((i) => (_jsxs("div", { className: "bg-slate-800 rounded-lg p-3 animate-pulse", children: [_jsx("div", { className: "h-4 bg-slate-700 rounded mb-2" }), _jsx("div", { className: "h-3 bg-slate-700 rounded w-2/3" })] }, i))) })) : slots.length === 0 ? (_jsxs("div", { className: "text-center py-8", children: [_jsx("div", { className: "w-12 h-12 bg-slate-800 rounded-full flex items-center justify-center mx-auto mb-3", children: _jsx("span", { className: "text-xl", children: "\uD83D\uDD50" }) }), _jsx("p", { className: "text-slate-400", children: "No slots found for this date" }), _jsx("p", { className: "text-slate-500 text-sm", children: "Use the form above to add new slots" })] })) : (_jsx("div", { className: "grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-2", children: slots.map((slot) => (_jsxs("div", { className: `border rounded-lg p-3 transition-colors ${getStatusColor(slot.status)}`, children: [_jsx("div", { className: "text-sm font-medium", children: slot.time }), _jsxs("div", { className: "text-xs opacity-75", children: ["Cap: ", slot.capacity] }), _jsx("div", { className: "mt-2", children: _jsxs("select", { value: slot.status, onChange: (e) => onSlotStatusChange(slot.id, e.target.value), className: "w-full bg-slate-700 border border-slate-600 rounded text-xs px-1 py-1", children: [_jsx("option", { value: "available", children: "Available" }), _jsx("option", { value: "full", children: "Full" })] }) })] }, slot.id))) }))] })] }));
};
